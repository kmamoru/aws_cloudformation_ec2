AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template for creating a project1"


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: vpc_project1
        - Key: project
          Value: wecloud

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: igw_project1
        - Key: project
          Value: wecloud

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: subnet_project1
        - Key: project
          Value: wecloud

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: rt_project1
        - Key: project
          Value: wecloud

  Route:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: project1_sg
      GroupDescription: "SG to allow SSH Access"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
      Tags:
        - Key: Name
          Value: sg_project1
        - Key: project
          Value: wecloud

  MasterNode:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ed99df77a82560e6
      InstanceType: t2.small
      KeyName: project1_key
      SubnetId: !Ref Subnet
      SecurityGroupIds:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: master-node-01
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          #Update and upgrade packages
          sudo apt update -y
          sudo apt upgrade -y

          #Install Python3.10
          sudo add-apt-repository --yes ppa:deadsnakes/ppa
          sudo apt update -y
          sudo apt install -y python3.10

          #Download and install Nodejs 18, install npm
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y nodejs
          sudo apt install -y npm

          #Install Java
          sudo apt install -y openjdk-11-jre-headless

          #Install Docker
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          

  WorkerNode1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ed99df77a82560e6
      InstanceType: t2.micro
      KeyName: project1_key
      SubnetId: !Ref Subnet
      SecurityGroupIds:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: worker-node-01
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          #Update and upgrade packages
          sudo apt update -y
          sudo apt upgrade -y

          #Install Python3.10
          sudo add-apt-repository --yes ppa:deadsnakes/ppa
          sudo apt update -y
          sudo apt install -y python3.10

          #Download and install Nodejs 18, install npm
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y nodejs
          sudo apt install -y npm

          #Install Java
          sudo apt install -y openjdk-11-jre-headless

          #Install Docker
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
 
  WorkerNode2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ed99df77a82560e6
      InstanceType: t2.micro
      KeyName: project1_key
      SubnetId: !Ref Subnet
      SecurityGroupIds:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: worker-node-02
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          #Update and upgrade packages
          sudo apt update -y
          sudo apt upgrade -y

          #Install Python3.10
          sudo add-apt-repository --yes ppa:deadsnakes/ppa
          sudo apt update -y
          sudo apt install -y python3.10

          #Download and install Nodejs 18, install npm
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y nodejs
          sudo apt install -y npm

          #Install Java
          sudo apt install -y openjdk-11-jre-headless

          #Install Docker
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
 
